server:
  port: 31200
  servlet:
    context-path: /
# 启动时需要配置 秘钥
# 方案一：在yml中加这个密钥的配置，在项目启动的时候，会根据密钥自动解密ENC(加密串)所代表的数据信息
# 方案二：将秘钥加入启动参数 -Djasypt.encryptor.password=xxx
jasypt:
  encryptor:
    password: phoenix
spring:
  application:
    name: xc-service-manage-course
  data:
    mongodb:
      uri: mongodb://root:root@www.bytes-space.com:50017
      database: xc_cms
  datasource:
    druid:
      url: jdbc:mysql://www.bytes-space.com:50306/xc_course?characterEncoding=utf-8
      username: root
      password: ENC(PfDPA+y3YVDqtcZ0XvkPjL6AYJse5+da)
      driverClassName: com.mysql.cj.jdbc.Driver
      initialSize: 10  #初始建立连接数量
      minIdle: 10  #最小连接数量
      maxActive: 50 #最大连接数量
      maxWait: 40000  #获取连接最大等待时间，毫秒
      testOnBorrow: true #申请连接时检测连接是否有效
      testOnReturn: false #归还连接时检测连接是否有效
      timeBetweenEvictionRunsMillis: 60000 #配置间隔检测连接是否有效的时间（单位是毫秒）
      minEvictableIdleTimeMillis: 300000  #连接在连接池的最小生存时间（毫秒）
pagehelper:
  helper-dialect: mysql # 配置方言
eureka:
  client:
    registerWithEureka: true #服务注册开关
    fetchRegistry: true #服务发现开关
    serviceUrl: #Eureka客户端与Eureka服务端进行交互的地址，多个中间用逗号分隔
      defaultZone: ${EUREKA_SERVER:http://localhost:50101/eureka/,http://localhost:50102/eureka/}
  instance:
    prefer-ip-address:  true  #将自己的ip地址注册到Eureka服务中
    ip-address: ${IP_ADDRESS:127.0.0.1}
    instance-id: ${spring.application.name}:${server.port} #指定实例id
ribbon:
  MaxAutoRetries: 2 #最大重试次数，当Eureka中可以找到服务，但是服务连不上时将会重试
  MaxAutoRetriesNextServer: 3 #切换实例的重试次数
  OkToRetryOnAllOperations: false  #对所有操作请求都进行重试，如果是get则可以，如果是post，put等操作没有实现幂等的情况下是很危险的,所以设置为false
  ConnectTimeout: 20000  #请求连接的超时时间
  ReadTimeout: 30000 #请求处理的超时时间
course-publish:
  siteId: 5b30cba5f58b4411fc6cb1e5
  templateId: 5b345a6b94db44269cb2bfec
  previewUrl: http://www.xuecheng.test/cms/preview/
  pageWebPath: /course/detail/
  pageWebPathPreview: /course/preview/
  pagePhysicalPath: /course/detail/
  pagePhysicalPathPreview: /course/preview/
  dataUrlPreview: http://localhost:31200/course/courseView/